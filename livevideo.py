# -*- coding: utf-8 -*-
"""LiveVideo.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PoZ6cjJmsQr558MjRAq7pUlZRwl4Rb1X
"""

import os
from google.colab.patches import cv2_imshow

!curl -o logo.png https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ3RcBlEJoJMeF5bmNqATwYE0UoyacHkuchjeHnE3Y4QPWF8smp
import cv2
img = cv2.imread('logo.png', cv2.IMREAD_UNCHANGED)
cv2_imshow(img)

# import cv2
# Starting camara
cap=cv2.VideoCapture(0)
while cap.isOpened():
  status,frame=cap.read()
  # Converting image frame  into gray scale
  grayimg=cv2.cvtColor(frame,cv2.COLOR_BG2GRAY)
  print(frame.shape)
  cv2.inshow('live',frame)
  cv2.inshow('livegray',grayimg)
  if cv2.waitKey(10)   & 0xff==ord('q'):
    break
    
  cv2.destroyAllWindows()
  cv2.release()

# to draw patterns

cap=cv2.VideoCapture(0)
while cap.isOpened():
  status,frame=cap.read()
  # Converting image frame  into gray scale
  grayimg=cv2.cvtColor(frame,cv2.COLOR_BG2GRAY)
  print(frame.shape)
  # Now all the patterns can be drawn
  cv2.line(frame,(0,0,(200,300),(0,255,0),3)
  # To draw circle
  cv2.circle(frame,(200,300),80,(13,44,123),2)
  cv2.inshow('live',frame)
  cv2.inshow('livegray',grayimg)
  if cv2.waitKey(10)   & 0xff==ord('q'):
    break
    
  cv2.destroyAllWindows()
  cv2.release()

"""Video ----- Image, Frame
if more than 25 images are passed in front of our eyes-------- it look like video  

openCV support .mk4 and .avi
We have to use a plug in or addon to write video in file
"""

import cv2
cap=cv2.VideoCapture(0)
# Adding Plugin
plugin=cv2.VideoWriter_fourcc(*'XVID')
# Now saving video
output=cv2.VideoWriter('class.mp4',plugin,20,(480,640))    # We'll pass 20 frames per second  (480,640)---camara resolution (height,width)


while cap.isOpened():
  status,frame=cap.read()
  output.write(frame)   # Sending data to VideoWrite 
  cv2.inshow('live',frame)
  cv2.inshow('livegray',grayimg)
  if cv2.waitKey(10)   & 0xff==ord('q'):
    break
    
  cv2.destroyAllWindows()
  cv2.release()

